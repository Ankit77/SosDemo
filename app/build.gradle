apply plugin: 'com.android.application'

android {
    compileSdkVersion 24
    buildToolsVersion "24.0.2"
    defaultConfig {
        applicationId "app.sosdemo"
        minSdkVersion 18
        targetSdkVersion 24
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets.main {
        jni.srcDirs = [] // This prevents the auto generation of Android.mk
        jniLibs.srcDir 'src/main/libs'
        // This is not necessary unless you have precompiled libraries in your project.
    }

    task buildNative(type: Exec, description: 'Compile JNI source via NDK') {
        def ndkDir = android.ndkDirectory
        commandLine "$ndkDir/ndk-build",
                '-C', file('/Volumes/DATA/Tuffdemo/SosDemo/app/src/main/jni').path, // Change src/main/jni the relative path to your jni source
                '-j', Runtime.runtime.availableProcessors(),
                'all',
                'NDK_DEBUG=1'
    }

    task cleanNative(type: Exec, description: 'Clean JNI object files') {
        def ndkDir = android.ndkDirectory
        commandLine "$ndkDir/ndk-build",
                '-C', file('/Volumes/DATA/Tuffdemo/SosDemo/app/src/main/jni').path, // Change src/main/jni the relative path to your jni source
                'clean'
    }

    clean.dependsOn 'cleanNative'
    tasks.withType(JavaCompile) {
        compileTask -> compileTask.dependsOn buildNative
    }

    //----------For Windows------------
//    task buildNative(type: Exec, description: 'Compile JNI source via NDK') {
//        def ndkDir = android.ndkDirectory
//        commandLine "$ndkDir/ndk-build.cmd",
//                '-C', file('src/main/jni').absolutePath, // Change src/main/jni the relative path to your jni source
//                '-j', Runtime.runtime.availableProcessors(),
//                'all',
//                'NDK_DEBUG=1'
//    }
//
//    task cleanNative(type: Exec, description: 'Clean JNI object files') {
//        def ndkDir = android.ndkDirectory
//        commandLine "$ndkDir/ndk-build.cmd",
//                '-C', file('src/main/jni').absolutePath, // Change src/main/jni the relative path to your jni source
//                'clean'
//    }
//    clean.dependsOn 'cleanNative'
//    tasks.withType(JavaCompile) {
//        compileTask -> compileTask.dependsOn buildNative
//    }

    productFlavors {
    }
    dexOptions {
        jumboMode true
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:24.2.1'
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:support-v4:24.2.1'
    compile 'com.android.support:support-v13:24.2.1'
    compile 'com.android.support:recyclerview-v7:24.2.1'
    compile 'com.android.support:cardview-v7:24.2.1'
    compile 'com.intuit.sdp:sdp-android:1.0.3'
    compile 'com.android.support:cardview-v7:24.2.1'
    compile 'com.google.android.gms:play-services-location:10.0.1'
    compile 'id.zelory:compressor:1.0.4'
    compile 'com.squareup.okhttp3:okhttp:3.3.1'
    compile files('src/main/libs/commons-net-1.4.1.jar')
}
